#----------------------------------------------------------
# This file is part of the gitlab-arm64 project.
#
# (c) Festim Kolgeci <festim.kolgei@pm.me>
#
# For complete copyright and license details, please refer
# to the LICENSE file distributed with this source code.
#----------------------------------------------------------

name: "[SHARED] build_docker_image"

on:
  workflow_call:
    inputs:
      gitlab_release:
        type: string
        description: "GitLab Release Docker-Tag (e.g. 17.6.1-ce.0)"
        required: true
      include_major_minor_tag:
        type: boolean
        description: "Update 'major.minor' tag (e.g. 17.6-ce)"
        required: false
        default: false
      include_major_tag:
        type: boolean
        description: "Update 'major' tag (e.g. 17-ce)"
        required: false
        default: false
      include_latest_tags:
        type: boolean
        description: "Only for newest release 'edition' (e.g. ce), and 'latest'"
        required: false
        default: false
      is_test:
        type: boolean
        description: "If true then some steps gets disabled (e.g. push docker image)"
        required: false
        default: false

env:
  GITHUB_REGISTRY: ghcr.io
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: gitlab
  DOCKER_IMAGE:  ${{ env.DOCKER_REGISTRY }}/${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
  GITHUB_IMAGE: ${{ env.GITHUB_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

jobs:
  validate-and-prepare:
    runs-on: ubuntu-latest
    outputs:
      gitlab_edition_suffix: ${{ steps.gitlab-edition.outputs.GITLAB_EDITION_SUFFIX }}
      dockerhub_manifest_tags: ${{ steps.docker-tags.outputs.DOCKERHUB_MANIFEST_TAGS }}
      dockerhub_arm64_image_tag: ${{ steps.docker-tags.outputs.DOCKERHUB_ARM64_IMAGE_TAG }}
      github_manifest_tags: ${{ steps.docker-tags.outputs.GITHUB_MANIFEST_TAGS }}
      github_arm64_image_tag: ${{ steps.docker-tags.outputs.GITHUB_ARM64_IMAGE_TAG }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Permissions
        # make all scripts in scripts/workflows/build executable
        run: chmod +x ./scripts/workflows/build/*.sh

      - name: Validate Input "gitlab_release"
        env:
          INPUT_GITLAB_RELEASE: ${{ inputs.gitlab_release }}
        run: ./scripts/workflows/build/validate_input_gitlab_release.sh

      - name: Extract GitLab Edition
        id: gitlab-edition
        env:
          INPUT_GITLAB_RELEASE: ${{ inputs.gitlab_release }}
        run: ./scripts/workflows/build/extract_gitlab_edition_suffix.sh
        # GITHUB_OUTPUT: GITLAB_EDITION_SUFFIX

      - name: Generate Tags
        env:
          INPUT_GITLAB_RELEASE: ${{ inputs.gitlab_release }}
          INPUT_INCLUDE_LATEST_TAGS: ${{ inputs.include_latest_tags }}
          INPUT_INCLUDE_MAJOR_TAG: ${{ inputs.include_major_tag }}
          INPUT_INCLUDE_MAJOR_MINOR_TAG: ${{ inputs.include_major_minor_tag }}
          GITLAB_EDITION_SUFFIX: ${{ steps.gitlab-edition.outputs.GITLAB_EDITION_SUFFIX }}
        run: ./scripts/workflows/build/generate_tags.sh
        # GITHUB_ENV: GENERATED_TAGS
        # GITHUB_ENV: ARM64_IMAGE_TAG

      - name: Generate Docker tags
        id: docker-tags
        env:
          GENERATED_TAGS: ${{ env.GENERATED_TAGS }}
          ARM64_IMAGE_TAG: ${{ env.ARM64_IMAGE_TAG }}
          DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          GITHUB_IMAGE: ${{ env.GITHUB_IMAGE }}
        run: ./scripts/workflows/build/generate_docker_tags.sh
        # GITHUB_OUTPUT: DOCKERHUB_MANIFEST_TAGS
        # GITHUB_OUTPUT: DOCKERHUB_ARM64_IMAGE_TAG
        # GITHUB_OUTPUT: GITHUB_MANIFEST_TAGS
        # GITHUB_OUTPUT: GITHUB_ARM64_IMAGE_TAG

  build-docker-image:
    runs-on: ubuntu-24.04-arm
    needs: validate-and-prepare
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Permissions
        # make all scripts in scripts/workflows/build executable
        run: chmod +x ./scripts/workflows/build/*.sh

      - name: Setup GitLab build files
        env:
          INPUT_GITLAB_RELEASE: ${{ inputs.gitlab_release }}
          GITLAB_EDITION_SUFFIX: ${{ needs.validate-and-prepare.outputs.gitlab_edition_suffix }}
        run: ./scripts/workflows/build/setup_build_files.sh

      - name: Docker login to docker.io
        uses: docker/login-action@v3
        if: inputs.is_test == false
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker login GitHubs container registry
        uses: docker/login-action@v3
        if: inputs.is_test == false
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v6
        with:
          context: build
          push: ${{ inputs.is_test == false }}
          tags: ${{ needs.validate-and-prepare.outputs.dockerhub_arm64_image_tag }},${{ needs.validate-and-prepare.outputs.github_arm64_image_tag }}
          platforms: linux/arm64
          provenance: false
          build-args: |
            TARGETARCH=arm64

      - name: Clean Up build files
        run: rm -rf build

  create-manifest:
    runs-on: ubuntu-latest
    needs: [ validate-and-prepare, build-docker-image ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "DOCKERHUB"
            registry: ${{ env.DOCKER_REGISTRY }}
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
            manifest_tags: ${{ needs.validate-and-prepare.outputs.dockerhub_manifest_tags }}
            arm64_image_tag: ${{ needs.validate-and-prepare.outputs.dockerhub_arm64_image_tag }}
          - platform: "GITHUB"
            registry: ${{ env.GITHUB_REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
            manifest_tags: ${{ needs.validate-and-prepare.outputs.github_manifest_tags }}
            arm64_image_tag: ${{ needs.validate-and-prepare.outputs.github_arm64_image_tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Permissions
        # make all scripts in scripts/workflows/build executable
        run: chmod +x ./scripts/workflows/build/*.sh

      - name: Docker login to ${{ matrix.platform }}
        uses: docker/login-action@v3
        if: inputs.is_test == false
        with:
          registry: ${{ matrix.registry }}
          username: ${{ matrix.username }}
          password: ${{ matrix.password }}

      - name: Create multi-arch docker manifest for ${{ matrix.platform }}
        env:
          INPUT_GITLAB_RELEASE: ${{ inputs.gitlab_release }}
          GITLAB_EDITION_SUFFIX: ${{ needs.validate-and-prepare.outputs.gitlab_edition_suffix }}
          ARM64_IMAGE_TAG: ${{ matrix.arm64_image_tag }}
          MANIFEST_TAGS: ${{ matrix.manifest_tags }}
          IS_TEST: ${{ inputs.is_test }}
        run: ./scripts/workflows/build/create_multi_arch_manifest.sh
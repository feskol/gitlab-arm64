name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      gitlab_release:
        description: "GitLab Release (e.g., 17.6.1+ce.0 or 17.6.1+ee.0)"
        required: true
      docker_push_tags:
        description: "Additional Docker tags (comma-separated, e.g., 'beta,stable')"
        required: false
      exclude_global_tags:
        description: "Exclude broader tags like 'major.minor' (e.g. 17.6), 'major' (e.g. 17), 'edition' (e.g. ce), and 'latest'"
        required: false
        default: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: docker login to docker.io
        uses: docker/login-action@v2
        # Only builds on the main branch will trigger the push, and forked repositories are excluded
        if: github.repository_owner == 'feskol' && github.ref == 'refs/heads/main'
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup binfmt-support
        uses: docker/setup-qemu-action@v2

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Parse Docker Tags
        id: parse-tags
        run: |
          GITLAB_RELEASE="${{ github.event.inputs.gitlab_release }}"
          
          # Replace "+" with "-" in the release
          NORMALIZED_RELEASE=$(echo "$GITLAB_RELEASE" | sed 's/+/-/g')
          
          # Extract suffix (-ce or -ee)
          SUFFIX=$(echo "$NORMALIZED_RELEASE" | sed -E 's/.*(-ce|-ee).*/\1/')
          
          # Strip version-specific parts to generate base tags
          BASE_TAG=$(echo "$GITLAB_RELEASE" | sed -E "s/(\.0)?${SUFFIX}.0$//")
          TAG_MAJOR=$(echo "$BASE_TAG" | cut -d. -f1)
          TAG_MAJOR_MINOR=$(echo "$BASE_TAG" | cut -d. -f1-2)
          TAG_MAJOR_MINOR_PATCH=$(echo "$BASE_TAG" | cut -d. -f1-3)
          
          # Define "latest" tag only if suffix is "ce"
          LATEST_TAG=""
          if [ "$SUFFIX" == "-ce" ]; then
            LATEST_TAG="latest"
          fi
          
          # Define tags for new releases (only if "exclude_global_tags" is false)
          DEFAULT_NEW_TAGS=""
          if [ "${{ github.event.inputs.exclude_global_tags }}" == "false" ]; then
            DEFAULT_NEW_TAGS="$TAG_MAJOR_MINOR$SUFFIX $TAG_MAJOR$SUFFIX ${SUFFIX#-}"
          fi

          # Default tags
          DEFAULT_TAGS="$NORMALIZED_RELEASE $TAG_MAJOR_MINOR_PATCH$SUFFIX $DEFAULT_NEW_TAGS $LATEST_TAG"

          # Append user-provided tags if any
          if [ -n "${{ github.event.inputs.docker_push_tags }}" ]; then
            ADDITIONAL_TAGS="${{ github.event.inputs.docker_push_tags }}"
          else
            ADDITIONAL_TAGS=""
          fi

          # Combine all tags, ensuring no extra spaces
          ALL_TAGS="$DEFAULT_TAGS $ADDITIONAL_TAGS"

          # Remove any extra spaces in the final tag list
          ALL_TAGS=$(echo $ALL_TAGS | xargs)
          
          # Prepend docker.io/feskol/gitlab to each tag and join them with commas
          DOCKERHUB_TAGS=$(echo $ALL_TAGS | tr ' ' '\n' | xargs -I {} echo "docker.io/${{ secrets.DOCKERHUB_USERNAME }}/gitlab:{}" | tr '\n' ',')

          # Remove the trailing comma at the end
          DOCKERHUB_TAGS=${DOCKERHUB_TAGS%,}
          
          echo "DOCKERHUB_TAGS=$DOCKERHUB_TAGS" >> $GITHUB_ENV
          echo "Docker Hub tags: $DOCKERHUB_TAGS"

      - name: Download GitLab Build Files
        run: |
          GITLAB_RELEASE=${{ github.event.inputs.gitlab_release }}
          mkdir -p build
          curl -sL "https://gitlab.com/gitlab-org/omnibus-gitlab/-/archive/${GITLAB_RELEASE}/omnibus-gitlab-${GITLAB_RELEASE}.tar.gz" | tar xz --strip-components=2 -C build "omnibus-gitlab-${GITLAB_RELEASE}/docker"

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v3
        with:
          context: build/docker
          # Only builds on the main branch will trigger the push, and forked repositories are excluded
          push: ${{ github.repository_owner == 'feskol' && github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gitlab:${{ env.DOCKERHUB_TAGS }}
          platforms: linux/arm64
          # Disable provenance generation to resolve issue #82
          provenance: false
          build-args: |
            TARGETARCH=arm64

      - name: Clean Up
        run: |
          docker buildx rm
          rm -rf build